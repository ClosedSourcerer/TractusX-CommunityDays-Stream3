name: "Trivy"

on:
  push:
    branches:
      - main
  schedule:
    # Once a day
    - cron: "0 0 * * *"
  # Trigger manually
  workflow_dispatch:

jobs:
  analyze-demand-capacity-mgmt-backend:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        if: always()
        uses: aquasecurity/trivy-action@master
        with:
          # Path to Docker image
          image-ref: "<TODO>:latest"
          format: "sarif"
          output: "trivy-results2.sarif"
          exit-code: "1"
          severity: "CRITICAL,HIGH"
          timeout: 15m

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results2.sarif"
